kind: Template
apiVersion: v1
metadata:
  name: go-template
  annotations:
    description: "Go Application"
    iconClass: "icon-redis"
    tags: "go,scratch"
objects:

- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "go-s2i"

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: go-build
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: .
    strategy:
      sourceStrategy:
        from: 
          kind: "ImageStreamTag"
          name: "scratch-s2i:latest"
    output:
      to:
        kind: "ImageStreamTag"
        name: "go-s2i:latest"

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: go-pipeline
  spec:
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node {
            stage 'build'
              openshiftBuild(buildConfig: 'go-build', showBuildLogs: 'true')
            stage 'deploy'
              openshiftDeploy(deployConfig: 'go-deploy')
          }

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "go-deploy"
  spec:
    template:
      metadata:
        labels:
          name: "go-app"
      spec:
        containers:
          - name: "golang"
            image: "go-s2i:latest"
            ports:
              - 

parameters:
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository
  description: Go Git Repository
  value: https://github.com/go-training/helloworld.git
  required: true

- name: SOURCE_REPOSITORY_REF
  displayName: Git Branch
  description: Go Git Repository Branch
  value: master
  required: true


